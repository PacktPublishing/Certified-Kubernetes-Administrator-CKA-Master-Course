kubectl describe node node1

kubectl describe pod


kubectl apply -f custom_pod_selector.yaml
~~~~~~~~~~~~~~~

apiVersion: v1
kind: Pod
metadata:
  name: frontend-custom
  labels:
    app: guestbook
    tier: frontend
    custom: mycustompod
spec:
  containers:
  - name: php-redis
    image: gcr.io/google-samples/gb-frontend:v4
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    env:
    - name: GET_HOSTS_FROM
      value: dns
      # If your cluster config does not include a dns service, then to
      # instead access environment variables to find service host
      # info, comment out the 'value: dns' line above, and uncomment the
      # line below:
      # value: env
    ports:
    - containerPort: 80
    
    
    ~~~~~~~~``



kubectl get all --all-namespaces

kubectl describe replicaset.apps/redis-slave-6c9f45444c

kubectl describe pod/redis-slave-6c9f45444c-4hf7d

kubectl get all --all-namespaces --show-labels 

kubectl get nodes --show-labels

kubectl get all --all-namespaces --selector="app" --show-labels

kubectl get pods --selector="app" --show-labels


kubectl get pods --show-labels 

kubectl get pods --show-labels | wc -l

kubectl get pods --show-labels --no-headers=true | wc -l

kubectl get pods --show-labels --no-headers=true

kubectl get pods --selector="app" --show-labels --no-headers=true | wc -l


kubectl get pods --selector="app=redis" --show-labels

kubectl get pods --selector="app=redis,role=slave" --show-labels

kubectl get pods --selector="role in (master,slave)" --show-labels

kubectl get pods --selector="app" --show-labels

#single quote to be used
kubectl get pods --selector='!app' --show-labels


kubectl get all --all-namespaces --selector="tier=control-plane" --show-labels

kubectl get all --all-namespaces  --selector="k8s-app" --show-labels

kubectl get all --n=kube-system  --selector="k8s-app" --show-labels
